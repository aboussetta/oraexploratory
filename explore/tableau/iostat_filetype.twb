<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0907.1515                                -->
<workbook source-build='9.3.7 (9300.16.0907.1515)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='IOPS_Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='11000.0'>
        <calculation class='tableau' formula='11000.0' />
      </column>
    </datasource>
    <datasource caption='awr_iostat_filetype' inline='true' name='textscan.42395.067756909724' version='9.3'>
      <connection class='textscan' directory='C:/Users/karl/Desktop/tmp/DLL' filename='awr_iostat_filetype.txt' password='' server='' username=''>
        <relation name='awr_iostat_filetype.txt' table='[awr_iostat_filetype#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='INSTNAME       ' ordinal='0' />
            <column datatype='integer' name='DB_ID                           ' ordinal='1' />
            <column datatype='string' name='HOSTNAME                      ' ordinal='2' />
            <column datatype='integer' name='ID' ordinal='3' />
            <column datatype='datetime' name='TM                                                                         ' ordinal='4' />
            <column datatype='integer' name='INST' ordinal='5' />
            <column datatype='real' name='DUR' ordinal='6' />
            <column datatype='string' name='FILETYPE_NAME                 ' ordinal='7' />
            <column datatype='real' name='READ_MBS' ordinal='8' />
            <column datatype='real' name='READ_IOPS' ordinal='9' />
            <column datatype='real' name='WRITE_MBS' ordinal='10' />
            <column datatype='real' name='WRITE_IOPS' ordinal='11' />
            <column datatype='real' name='SREAD_MBS' ordinal='12' />
            <column datatype='real' name='SREAD_IOPS' ordinal='13' />
            <column datatype='real' name='SWRITE_MBS' ordinal='14' />
            <column datatype='real' name='SWRITE_IOPS' ordinal='15' />
            <column datatype='real' name='SR_LAT' ordinal='16' />
            <column datatype='real' name='SW_LAT' ordinal='17' />
            <column datatype='real' name='LR_LAT' ordinal='18' />
            <column datatype='real' name='LW_LAT' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>INSTNAME       </remote-name>
            <remote-type>129</remote-type>
            <local-name>[INSTNAME       ]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>INSTNAME       </remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DB_ID                           </remote-name>
            <remote-type>20</remote-type>
            <local-name>[DB_ID                           ]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>DB_ID                           </remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSTNAME                      </remote-name>
            <remote-type>129</remote-type>
            <local-name>[HOSTNAME                      ]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>HOSTNAME                      </remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TM                                                                         </remote-name>
            <remote-type>135</remote-type>
            <local-name>[TM                                                                         ]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>TM                                                                         </remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[INST]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>INST</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DUR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DUR]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>DUR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FILETYPE_NAME                 </remote-name>
            <remote-type>129</remote-type>
            <local-name>[FILETYPE_NAME                 ]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>FILETYPE_NAME                 </remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>READ_MBS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[READ_MBS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>READ_MBS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>READ_IOPS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[READ_IOPS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>READ_IOPS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WRITE_MBS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WRITE_MBS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>WRITE_MBS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WRITE_IOPS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WRITE_IOPS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>WRITE_IOPS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SREAD_MBS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SREAD_MBS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SREAD_MBS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SREAD_IOPS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SREAD_IOPS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SREAD_IOPS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SWRITE_MBS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SWRITE_MBS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SWRITE_MBS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SWRITE_IOPS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SWRITE_IOPS]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SWRITE_IOPS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR_LAT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SR_LAT]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SR_LAT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SW_LAT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SW_LAT]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>SW_LAT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LR_LAT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LR_LAT]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>LR_LAT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LW_LAT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LW_LAT]</local-name>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias>LW_LAT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[awr_iostat_filetype.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
      </column>
      <column caption='MB/s' datatype='real' name='[Calculation_261771773235126273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[READ_MBS]+([WRITE_MBS])' />
      </column>
      <column caption='Read Iops Pct' datatype='real' name='[Calculation_689050754643791874]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='round(((sum([READ_IOPS])/sum([Calculation_261771773235003392]))*100),0)' />
      </column>
      <column caption='Write Iops Pct' datatype='real' name='[Calculation_689050754644271107]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='round(((sum([WRITE_IOPS])/sum([Calculation_261771773235003392]))*100),0)' />
      </column>
      <column caption='Db Id' datatype='integer' name='[DB_ID                           ]' role='dimension' type='ordinal' />
      <column datatype='real' name='[DUR]' role='measure' type='quantitative' />
      <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
      <column caption='Hostname' datatype='string' name='[HOSTNAME                      ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Lr Lat' datatype='real' name='[LR_LAT]' role='measure' semantic-role='' type='quantitative' />
      <column aggregation='Avg' caption='Lw Lat' datatype='real' name='[LW_LAT]' role='measure' semantic-role='' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
      <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
      <column caption='Sread Iops' datatype='real' name='[SREAD_IOPS]' role='measure' type='quantitative' />
      <column caption='Sread Mbs' datatype='real' name='[SREAD_MBS]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Sr Lat' datatype='real' name='[SR_LAT]' role='measure' semantic-role='' type='quantitative' />
      <column caption='Swrite Iops' datatype='real' name='[SWRITE_IOPS]' role='measure' type='quantitative' />
      <column caption='Swrite Mbs' datatype='real' name='[SWRITE_MBS]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Sw Lat' datatype='real' name='[SW_LAT]' role='measure' semantic-role='' type='quantitative' />
      <column caption='Tm1' datatype='datetime' name='[TM                                                                         ]' role='dimension' type='ordinal' />
      <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
      <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
      <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
      <column-instance column='[LR_LAT]' derivation='Avg' name='[avg:LR_LAT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LW_LAT]' derivation='Avg' name='[avg:LW_LAT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR_LAT]' derivation='Avg' name='[avg:SR_LAT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SW_LAT]' derivation='Avg' name='[avg:SW_LAT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TM                                                                         ]' derivation='Day' name='[dy:TM                                                                         :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM                                                                         ]' derivation='Hour' name='[hr:TM                                                                         :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM                                                                         ]' derivation='Month' name='[mn:TM                                                                         :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
      <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
      <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
      <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
      <column-instance column='[READ_IOPS]' derivation='Sum' name='[pcto:sum:READ_IOPS:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TM                                                                         ]' derivation='Quarter' name='[qr:TM                                                                         :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_261771773235003392]' derivation='Sum' name='[sum:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_261771773235126273]' derivation='Sum' name='[sum:Calculation_261771773235126273:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DUR]' derivation='Sum' name='[sum:DUR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[READ_IOPS]' derivation='Sum' name='[sum:READ_IOPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[READ_MBS]' derivation='Sum' name='[sum:READ_MBS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SREAD_IOPS]' derivation='Sum' name='[sum:SREAD_IOPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SREAD_MBS]' derivation='Sum' name='[sum:SREAD_MBS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SWRITE_IOPS]' derivation='Sum' name='[sum:SWRITE_IOPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SWRITE_MBS]' derivation='Sum' name='[sum:SWRITE_MBS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WRITE_IOPS]' derivation='Sum' name='[sum:WRITE_IOPS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WRITE_MBS]' derivation='Sum' name='[sum:WRITE_MBS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_689050754643791874]' derivation='User' name='[usr:Calculation_689050754643791874:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_689050754644271107]' derivation='User' name='[usr:Calculation_689050754644271107:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TM                                                                         ]' derivation='Year' name='[yr:TM                                                                         :ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,Instname,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:TM               :ok]' />
          <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
          <groupfilter function='level-members' level='[hr:TM               :ok]' />
          <groupfilter function='level-members' level='[none:INST:ok]' />
          <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
          <groupfilter function='level-members' level='[mn:TM               :ok]' />
          <groupfilter function='level-members' level='[qr:TM               :ok]' />
          <groupfilter function='level-members' level='[yr:TM               :ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:TM               :ok]' />
          <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
          <groupfilter function='level-members' level='[hr:TM               :ok]' />
          <groupfilter function='level-members' level='[none:INST:ok]' />
          <groupfilter function='level-members' level='[mn:TM               :ok]' />
          <groupfilter function='level-members' level='[qr:TM               :ok]' />
          <groupfilter function='level-members' level='[yr:TM               :ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Instname,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:TM               :ok]' />
          <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
          <groupfilter function='level-members' level='[hr:TM               :ok]' />
          <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
          <groupfilter function='level-members' level='[mn:TM               :ok]' />
          <groupfilter function='level-members' level='[qr:TM               :ok]' />
          <groupfilter function='level-members' level='[yr:TM               :ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),MONTH(Tm),QUARTER(Tm),YEAR(Tm))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:TM               :ok]' />
          <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
          <groupfilter function='level-members' level='[hr:TM               :ok]' />
          <groupfilter function='level-members' level='[mn:TM               :ok]' />
          <groupfilter function='level-members' level='[qr:TM               :ok]' />
          <groupfilter function='level-members' level='[yr:TM               :ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (DAY(Tm1),Filetype Name,HOUR(Tm1),Inst,Instname,MONTH(Tm1),QUARTER(Tm1),YEAR(Tm1))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dy:TM                                                                         :ok]' />
          <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
          <groupfilter function='level-members' level='[hr:TM                                                                         :ok]' />
          <groupfilter function='level-members' level='[none:INST:ok]' />
          <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
          <groupfilter function='level-members' level='[mn:TM                                                                         :ok]' />
          <groupfilter function='level-members' level='[qr:TM                                                                         :ok]' />
          <groupfilter function='level-members' level='[yr:TM                                                                         :ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.313167' measure-ordering='alphabetic' measure-percentage='0.613879' parameter-percentage='0.0729537' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:INSTNAME       :nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;olmcrp07&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;iriscore3&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;irislteb3&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;olmtst11&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;halte3&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;INSTNAME&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;rtca11&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;iristrfo3&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;xman1&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;irislte3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:FILETYPE_NAME                 :nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Archive Log&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Data File&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Temp File&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Log File&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Data File Incremental Backup&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Flashback Log&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Data File Copy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Archive Log Backup&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;FILETYPE_NAME&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Data File Backup&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Control File&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Data Pump Dump File&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42395.067756909724]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42395.067756909724].[pcto:sum:READ_IOPS:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:READ_IOPS:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42395.067756909724].[avg:LR_LAT:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42395.067756909724].[usr:Calculation_689050754643791874:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:SWRITE_MBS:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:SREAD_IOPS:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:READ_MBS:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[textscan.42395.067756909724].[avg:LW_LAT:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:DUR:qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:SREAD_MBS:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[textscan.42395.067756909724].[avg:SR_LAT:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:WRITE_MBS:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:Calculation_261771773235126273:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42395.067756909724].[usr:Calculation_689050754644271107:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.42395.067756909724].[avg:SW_LAT:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:SWRITE_IOPS:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:WRITE_IOPS:qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[textscan.42395.067756909724].[sum:Calculation_261771773235003392:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='INSTNAME       ' />
        <field-sort-custom-order field='DB_ID     ' />
        <field-sort-custom-order field='HOSTNAME                      ' />
        <field-sort-custom-order field='ID' />
        <field-sort-custom-order field='TM               ' />
        <field-sort-custom-order field='INST' />
        <field-sort-custom-order field='DUR' />
        <field-sort-custom-order field='FILETYPE_NAME                 ' />
        <field-sort-custom-order field='READ_MBS' />
        <field-sort-custom-order field='READ_IOPS' />
        <field-sort-custom-order field='WRITE_MBS' />
        <field-sort-custom-order field='WRITE_IOPS' />
        <field-sort-custom-order field='SREAD_MBS' />
        <field-sort-custom-order field='SREAD_IOPS' />
        <field-sort-custom-order field='SWRITE_MBS' />
        <field-sort-custom-order field='SWRITE_IOPS' />
        <field-sort-custom-order field='SR_LAT' />
        <field-sort-custom-order field='SW_LAT' />
        <field-sort-custom-order field='LR_LAT' />
        <field-sort-custom-order field='LW_LAT' />
        <field-sort-custom-order field='Calculation_261771773235003392' />
        <field-sort-custom-order field='Calculation_261771773235126273' />
        <field-sort-custom-order field='TM                                                                         ' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='datafile'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='MB/s' datatype='real' name='[Calculation_261771773235126273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_MBS]+([WRITE_MBS])' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771773235003392]' derivation='Max' name='[max:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771773235126273]' derivation='Max' name='[max:Calculation_261771773235126273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM               :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM               :ok]' />
                <groupfilter function='level-members' level='[none:INST:ok]' />
                <groupfilter function='level-members' level='[mn:TM               :ok]' />
                <groupfilter function='level-members' level='[qr:TM               :ok]' />
                <groupfilter function='level-members' level='[yr:TM               :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM               :ok]' member='8' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[qr:TM               :ok]' member='3' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[yr:TM               :ok]' member='2016' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='12' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='10' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='13' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='20' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Archive Log&quot;' />
                                  <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Control File&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='4' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='5' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='4' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM               :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM               :ok]' />
                  <hierarchy name='[none:INST:ok]' />
                  <hierarchy name='[mn:TM               :ok]' />
                  <hierarchy name='[qr:TM               :ok]' />
                  <hierarchy name='[yr:TM               :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' field-type='quantitative' max='150000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' field-type='quantitative' max='50000.0' min='-2212.7064987578501' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='1' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='max' id='refline1' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='2' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='average' id='refline2' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='3' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='max' id='refline3' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:Calculation_261771773235003392:qk] + [textscan.42395.067756909724].[max:Calculation_261771773235126273:qk])</rows>
        <cols>([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='iops_mbs ALL'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='MB/s' datatype='real' name='[Calculation_261771773235126273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_MBS]+([WRITE_MBS])' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Hostname' datatype='string' name='[HOSTNAME                      ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm1' datatype='datetime' name='[TM                                                                         ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM                                                                         ]' derivation='Day' name='[dy:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM                                                                         ]' derivation='Hour' name='[hr:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771773235003392]' derivation='Max' name='[max:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771773235126273]' derivation='Max' name='[max:Calculation_261771773235126273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM                                                                         ]' derivation='Month' name='[mn:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[HOSTNAME                      ]' derivation='None' name='[none:HOSTNAME                      :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM                                                                         ]' derivation='Quarter' name='[qr:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM                                                                         ]' derivation='Year' name='[yr:TM                                                                         :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
              <groupfilter function='empty-level' member='[none:FILETYPE_NAME                 :nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' field-type='quantitative' max='50000.0' min='-2212.7064987578501' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='1' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='max' id='refline1' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='2' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='average' id='refline2' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='3' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='max' id='refline3' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([textscan.42395.067756909724].[none:INSTNAME       :nk] / [textscan.42395.067756909724].[none:HOSTNAME                      :nk]) * ([textscan.42395.067756909724].[max:Calculation_261771773235003392:qk] + [textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]))</rows>
        <cols>([textscan.42395.067756909724].[yr:TM                                                                         :ok] / ([textscan.42395.067756909724].[qr:TM                                                                         :ok] / ([textscan.42395.067756909724].[mn:TM                                                                         :ok] / ([textscan.42395.067756909724].[dy:TM                                                                         :ok] / [textscan.42395.067756909724].[hr:TM                                                                         :ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='iops_mbs_by_filetype'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='MB/s' datatype='real' name='[Calculation_261771773235126273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_MBS]+([WRITE_MBS])' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771773235003392]' derivation='Max' name='[max:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771773235126273]' derivation='Max' name='[max:Calculation_261771773235126273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM               :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM               :ok]' />
                <groupfilter function='level-members' level='[none:INST:ok]' />
                <groupfilter function='level-members' level='[mn:TM               :ok]' />
                <groupfilter function='level-members' level='[qr:TM               :ok]' />
                <groupfilter function='level-members' level='[yr:TM               :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM               :ok]' member='8' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:TM               :ok]' member='3' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:TM               :ok]' member='2016' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[dy:TM               :ok]' member='12' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[hr:TM               :ok]' member='10' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[dy:TM               :ok]' member='13' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[hr:TM               :ok]' member='20' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM               :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM               :ok]' />
                  <hierarchy name='[none:INST:ok]' />
                  <hierarchy name='[mn:TM               :ok]' />
                  <hierarchy name='[qr:TM               :ok]' />
                  <hierarchy name='[yr:TM               :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
              <groupfilter function='empty-level' member='[none:FILETYPE_NAME                 :nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:Calculation_261771773235003392:qk] + [textscan.42395.067756909724].[max:Calculation_261771773235126273:qk])</rows>
        <cols>([textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk] / ([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok])))))</cols>
      </table>
    </worksheet>
    <worksheet name='latency'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Lr Lat' datatype='real' name='[LR_LAT]' role='measure' semantic-role='' type='quantitative' />
            <column aggregation='Avg' caption='Lw Lat' datatype='real' name='[LW_LAT]' role='measure' semantic-role='' type='quantitative' />
            <column aggregation='Avg' caption='Sr Lat' datatype='real' name='[SR_LAT]' role='measure' semantic-role='' type='quantitative' />
            <column aggregation='Avg' caption='Sw Lat' datatype='real' name='[SW_LAT]' role='measure' semantic-role='' type='quantitative' />
            <column caption='Tm1' datatype='datetime' name='[TM                                                                         ]' role='dimension' type='ordinal' />
            <column-instance column='[TM                                                                         ]' derivation='Day' name='[dy:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM                                                                         ]' derivation='Hour' name='[hr:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[LR_LAT]' derivation='Max' name='[max:LR_LAT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LW_LAT]' derivation='Max' name='[max:LW_LAT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR_LAT]' derivation='Max' name='[max:SR_LAT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SW_LAT]' derivation='Max' name='[max:SW_LAT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM                                                                         ]' derivation='Month' name='[mn:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM                                                                         ]' derivation='Quarter' name='[qr:TM                                                                         :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM                                                                         ]' derivation='Year' name='[yr:TM                                                                         :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm1),Filetype Name,HOUR(Tm1),Inst,Instname,MONTH(Tm1),QUARTER(Tm1),YEAR(Tm1))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM                                                                         :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM                                                                         :ok]' />
                <groupfilter function='level-members' level='[none:INST:ok]' />
                <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
                <groupfilter function='level-members' level='[mn:TM                                                                         :ok]' />
                <groupfilter function='level-members' level='[qr:TM                                                                         :ok]' />
                <groupfilter function='level-members' level='[yr:TM                                                                         :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM                                                                         :ok]' member='10' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:INST:ok]' member='1' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:TM                                                                         :ok]' member='4' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[yr:TM                                                                         :ok]' member='2016' />
                          <groupfilter function='union'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[dy:TM                                                                         :ok]' member='28' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[hr:TM                                                                         :ok]' member='13' />
                                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;olmtst11&quot;' />
                              </groupfilter>
                            </groupfilter>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[dy:TM                                                                         :ok]' member='30' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[hr:TM                                                                         :ok]' member='19' />
                                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;olmcrp07&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM                                                                         :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM                                                                         :ok]' />
                  <hierarchy name='[none:INST:ok]' />
                  <hierarchy name='[none:INSTNAME       :nk]' />
                  <hierarchy name='[mn:TM                                                                         :ok]' />
                  <hierarchy name='[qr:TM                                                                         :ok]' />
                  <hierarchy name='[yr:TM                                                                         :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data Pump Dump File&quot;' />
                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Flashback Log&quot;' />
                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Temp File&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm1),Filetype Name,HOUR(Tm1),Inst,Instname,MONTH(Tm1),QUARTER(Tm1),YEAR(Tm1))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42395.067756909724].[max:SR_LAT:qk]' scope='rows' value='single read' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:SR_LAT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:SR_LAT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42395.067756909724].[max:SW_LAT:qk]' scope='rows' value='single write' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:SW_LAT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:SW_LAT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42395.067756909724].[max:LR_LAT:qk]' scope='rows' value='large read' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:LR_LAT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:LR_LAT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42395.067756909724].[max:LW_LAT:qk]' scope='rows' value='large write' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:LW_LAT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:LW_LAT:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:INSTNAME       :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42395.067756909724].[max:SR_LAT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:INSTNAME       :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.42395.067756909724].[max:SW_LAT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:INSTNAME       :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[textscan.42395.067756909724].[max:LR_LAT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:INSTNAME       :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[textscan.42395.067756909724].[max:LW_LAT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:INSTNAME       :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:SR_LAT:qk] + ([textscan.42395.067756909724].[max:SW_LAT:qk] + ([textscan.42395.067756909724].[max:LR_LAT:qk] + [textscan.42395.067756909724].[max:LW_LAT:qk])))</rows>
        <cols>([textscan.42395.067756909724].[none:INSTNAME       :nk] / ([textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk] / ([textscan.42395.067756909724].[yr:TM                                                                         :ok] / ([textscan.42395.067756909724].[qr:TM                                                                         :ok] / ([textscan.42395.067756909724].[mn:TM                                                                         :ok] / [textscan.42395.067756909724].[hr:TM                                                                         :ok])))))</cols>
      </table>
    </worksheet>
    <worksheet name='other filetype'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='MB/s' datatype='real' name='[Calculation_261771773235126273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_MBS]+([WRITE_MBS])' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771773235003392]' derivation='Max' name='[max:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771773235126273]' derivation='Max' name='[max:Calculation_261771773235126273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM               :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM               :ok]' />
                <groupfilter function='level-members' level='[none:INST:ok]' />
                <groupfilter function='level-members' level='[mn:TM               :ok]' />
                <groupfilter function='level-members' level='[qr:TM               :ok]' />
                <groupfilter function='level-members' level='[yr:TM               :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM               :ok]' member='8' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[qr:TM               :ok]' member='3' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[yr:TM               :ok]' member='2016' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='12' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='10' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='13' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='20' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Archive Log&quot;' />
                                  <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Control File&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='4' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='5' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                  <groupfilter function='member' level='[none:INST:ok]' member='4' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM               :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM               :ok]' />
                  <hierarchy name='[none:INST:ok]' />
                  <hierarchy name='[mn:TM               :ok]' />
                  <hierarchy name='[qr:TM               :ok]' />
                  <hierarchy name='[yr:TM               :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' field-type='quantitative' max='150000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' field-type='quantitative' max='50000.0' min='-2212.7064987578501' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='1' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' enable-instant-analytics='true' formula='max' id='refline1' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]' z-order='2' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='average' id='refline2' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='3' />
            <reference-line axis-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' enable-instant-analytics='true' formula='max' id='refline3' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]' z-order='4' />
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235003392:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:Calculation_261771773235126273:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:Calculation_261771773235003392:qk] + [textscan.42395.067756909724].[max:Calculation_261771773235126273:qk])</rows>
        <cols>([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='ratiobyFileType'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_261771773235003392]' derivation='Sum' name='[pcto:sum:Calculation_261771773235003392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_261771773235003392]' derivation='Sum' name='[sum:Calculation_261771773235003392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
              <groupfilter function='empty-level' member='[none:FILETYPE_NAME                 :nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='482' />
            <format attr='height' value='470' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <wedge-size column='[textscan.42395.067756909724].[sum:Calculation_261771773235003392:qk]' />
              <size column='[textscan.42395.067756909724].[sum:Calculation_261771773235003392:qk]' />
              <text column='[textscan.42395.067756909724].[pcto:sum:Calculation_261771773235003392:qk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[textscan.42395.067756909724].[none:INSTNAME       :nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ratiobyRW'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='IOPS' datatype='real' name='[Calculation_261771773235003392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[READ_IOPS]+([WRITE_IOPS])' />
            </column>
            <column caption='Read Iops Pct' datatype='real' name='[Calculation_689050754643791874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round(((sum([READ_IOPS])/sum([Calculation_261771773235003392]))*100),0)' />
            </column>
            <column caption='Write Iops Pct' datatype='real' name='[Calculation_689050754644271107]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round(((sum([WRITE_IOPS])/sum([Calculation_261771773235003392]))*100),0)' />
            </column>
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_689050754643791874]' derivation='User' name='[usr:Calculation_689050754643791874:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_689050754644271107]' derivation='User' name='[usr:Calculation_689050754644271107:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42395.067756909724].[usr:Calculation_689050754643791874:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42395.067756909724].[usr:Calculation_689050754644271107:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='482' />
            <format attr='height' value='470' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.42395.067756909724].[:Measure Names]' />
              <size column='[textscan.42395.067756909724].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[textscan.42395.067756909724].[none:INSTNAME       :nk]</cols>
      </table>
    </worksheet>
    <worksheet name='rw all'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='MAX([Write Iops])*2' datatype='real' name='[Calculation_397442712013156354]' role='measure' type='quantitative' user:unnamed='except datafile'>
              <calculation class='tableau' formula='MAX([WRITE_IOPS])*2' />
            </column>
            <column caption='MAX([Write Mbs])*2' datatype='real' name='[Calculation_397442712013172739]' role='measure' type='quantitative' user:unnamed='except datafile'>
              <calculation class='tableau' formula='MAX([WRITE_MBS])*2' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[READ_IOPS]' derivation='Max' name='[max:READ_IOPS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[READ_MBS]' derivation='Max' name='[max:READ_MBS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_397442712013156354]' derivation='User' name='[usr:Calculation_397442712013156354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_397442712013172739]' derivation='User' name='[usr:Calculation_397442712013172739:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),MONTH(Tm),QUARTER(Tm),YEAR(Tm))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM               :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM               :ok]' />
                <groupfilter function='level-members' level='[mn:TM               :ok]' />
                <groupfilter function='level-members' level='[qr:TM               :ok]' />
                <groupfilter function='level-members' level='[yr:TM               :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM               :ok]' member='8' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[qr:TM               :ok]' member='3' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[yr:TM               :ok]' member='2016' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='12' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='10' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Archive Log&quot;' />
                              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Control File&quot;' />
                              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[dy:TM               :ok]' member='13' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[hr:TM               :ok]' member='20' />
                            <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM               :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM               :ok]' />
                  <hierarchy name='[mn:TM               :ok]' />
                  <hierarchy name='[qr:TM               :ok]' />
                  <hierarchy name='[yr:TM               :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter from='&quot;Archive Log&quot;' function='range' level='[none:FILETYPE_NAME                 :nk]' to='&quot;Temp File&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),MONTH(Tm),QUARTER(Tm),YEAR(Tm))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:READ_IOPS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:READ_MBS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013156354:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013172739:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:READ_IOPS:qk] + ([textscan.42395.067756909724].[max:READ_MBS:qk] + ([textscan.42395.067756909724].[usr:Calculation_397442712013156354:qk] + [textscan.42395.067756909724].[usr:Calculation_397442712013172739:qk])))</rows>
        <cols>([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='rw except datafile'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='MAX([Write Iops])*2' datatype='real' name='[Calculation_397442712013156354]' role='measure' type='quantitative' user:unnamed='except datafile'>
              <calculation class='tableau' formula='MAX([WRITE_IOPS])*2' />
            </column>
            <column caption='MAX([Write Mbs])*2' datatype='real' name='[Calculation_397442712013172739]' role='measure' type='quantitative' user:unnamed='except datafile'>
              <calculation class='tableau' formula='MAX([WRITE_MBS])*2' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[READ_IOPS]' derivation='Max' name='[max:READ_IOPS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[READ_MBS]' derivation='Max' name='[max:READ_MBS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_397442712013156354]' derivation='User' name='[usr:Calculation_397442712013156354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_397442712013172739]' derivation='User' name='[usr:Calculation_397442712013172739:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Archive Log&quot;' />
              <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Control File&quot;' />
              <groupfilter from='&quot;Data File Backup&quot;' function='range' level='[none:FILETYPE_NAME                 :nk]' to='&quot;Data Pump Dump File&quot;' />
              <groupfilter from='&quot;Log File&quot;' function='range' level='[none:FILETYPE_NAME                 :nk]' to='&quot;Temp File&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:READ_IOPS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:READ_MBS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013156354:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013172739:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:READ_IOPS:qk] + ([textscan.42395.067756909724].[max:READ_MBS:qk] + ([textscan.42395.067756909724].[usr:Calculation_397442712013156354:qk] + [textscan.42395.067756909724].[usr:Calculation_397442712013172739:qk])))</rows>
        <cols>([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='rw_by_db_filetype'>
      <table>
        <view>
          <datasources>
            <datasource caption='awr_iostat_filetype' name='textscan.42395.067756909724' />
          </datasources>
          <datasource-dependencies datasource='textscan.42395.067756909724'>
            <column caption='MAX([Write Iops])*2' datatype='real' name='[Calculation_397442712013066240]' role='measure' type='quantitative' user:unnamed='ALL breakdown'>
              <calculation class='tableau' formula='MAX([WRITE_IOPS])*2' />
            </column>
            <column caption='MAX([Write Mbs])*2' datatype='real' name='[Calculation_397442712013127681]' role='measure' type='quantitative' user:unnamed='ALL breakdown'>
              <calculation class='tableau' formula='MAX([WRITE_MBS])*2' />
            </column>
            <column caption='Filetype Name' datatype='string' name='[FILETYPE_NAME                 ]' role='dimension' type='nominal' />
            <column caption='Instname' datatype='string' name='[INSTNAME       ]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Inst' datatype='integer' name='[INST]' role='dimension' type='ordinal' />
            <column caption='Read Iops' datatype='real' name='[READ_IOPS]' role='measure' type='quantitative' />
            <column caption='Read Mbs' datatype='real' name='[READ_MBS]' role='measure' type='quantitative' />
            <column caption='Tm' datatype='datetime' name='[TM               ]' role='dimension' type='ordinal' />
            <column caption='Write Iops' datatype='real' name='[WRITE_IOPS]' role='measure' type='quantitative' />
            <column caption='Write Mbs' datatype='real' name='[WRITE_MBS]' role='measure' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Day' name='[dy:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[TM               ]' derivation='Hour' name='[hr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[READ_IOPS]' derivation='Max' name='[max:READ_IOPS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[READ_MBS]' derivation='Max' name='[max:READ_MBS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Month' name='[mn:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[FILETYPE_NAME                 ]' derivation='None' name='[none:FILETYPE_NAME                 :nk]' pivot='key' type='nominal' />
            <column-instance column='[INST]' derivation='None' name='[none:INST:ok]' pivot='key' type='ordinal' />
            <column-instance column='[INSTNAME       ]' derivation='None' name='[none:INSTNAME       :nk]' pivot='key' type='nominal' />
            <column-instance column='[TM               ]' derivation='Quarter' name='[qr:TM               :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_397442712013066240]' derivation='User' name='[usr:Calculation_397442712013066240:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_397442712013127681]' derivation='User' name='[usr:Calculation_397442712013127681:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TM               ]' derivation='Year' name='[yr:TM               :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[dy:TM               :ok]' />
                <groupfilter function='level-members' level='[none:FILETYPE_NAME                 :nk]' />
                <groupfilter function='level-members' level='[hr:TM               :ok]' />
                <groupfilter function='level-members' level='[none:INST:ok]' />
                <groupfilter function='level-members' level='[mn:TM               :ok]' />
                <groupfilter function='level-members' level='[qr:TM               :ok]' />
                <groupfilter function='level-members' level='[yr:TM               :ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[mn:TM               :ok]' member='8' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:FILETYPE_NAME                 :nk]' member='&quot;Data File&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:TM               :ok]' member='3' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[yr:TM               :ok]' member='2016' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[dy:TM               :ok]' member='12' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[hr:TM               :ok]' member='10' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[dy:TM               :ok]' member='13' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[hr:TM               :ok]' member='20' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:INST:ok]' member='1' />
                                <groupfilter function='member' level='[none:INST:ok]' member='2' />
                                <groupfilter function='member' level='[none:INST:ok]' member='4' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:TM               :ok]' />
                  <hierarchy name='[none:FILETYPE_NAME                 :nk]' />
                  <hierarchy name='[hr:TM               :ok]' />
                  <hierarchy name='[none:INST:ok]' />
                  <hierarchy name='[mn:TM               :ok]' />
                  <hierarchy name='[qr:TM               :ok]' />
                  <hierarchy name='[yr:TM               :ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42395.067756909724].[none:INSTNAME       :nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:INSTNAME       :nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='%null%' />
                <groupfilter function='member' level='[none:INSTNAME       :nk]' member='&quot;INSTNAME&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42395.067756909724].[none:INSTNAME       :nk]</column>
            <column>[textscan.42395.067756909724].[Exclusions (DAY(Tm),Filetype Name,HOUR(Tm),Inst,MONTH(Tm),QUARTER(Tm),YEAR(Tm))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.42395.067756909724].[max:READ_IOPS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42395.067756909724].[max:READ_MBS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013066240:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42395.067756909724].[usr:Calculation_397442712013127681:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' />
              <lod column='[textscan.42395.067756909724].[none:INST:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42395.067756909724].[max:READ_IOPS:qk] + ([textscan.42395.067756909724].[max:READ_MBS:qk] + ([textscan.42395.067756909724].[usr:Calculation_397442712013066240:qk] + [textscan.42395.067756909724].[usr:Calculation_397442712013127681:qk])))</rows>
        <cols>([textscan.42395.067756909724].[none:INSTNAME       :nk] / ([textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk] / ([textscan.42395.067756909724].[yr:TM               :ok] / ([textscan.42395.067756909724].[qr:TM               :ok] / ([textscan.42395.067756909724].[mn:TM               :ok] / ([textscan.42395.067756909724].[dy:TM               :ok] / [textscan.42395.067756909724].[hr:TM               :ok]))))))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='85116' x='0' y='0'>
              <zone h='100000' id='1' name='datafile' show-title='true' w='42559' x='0' y='0' />
              <zone h='100000' id='7' name='other filetype' show-title='true' w='42557' x='42559' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14884' x='85116' y='0'>
              <zone h='3874' id='6' name='datafile' pane-specification-id='1' param='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' type='color' w='14884' x='85116' y='0' />
              <zone h='3278' id='8' name='other filetype' pane-specification-id='1' param='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' type='color' w='14884' x='85116' y='3874' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='latency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.42395.067756909724].[none:INSTNAME       :nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[none:INSTNAME       :nk]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rw_by_db_filetype'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[none:INSTNAME       :nk]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rw all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='rw except datafile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='datafile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='41' type='pages' />
            <card size='62' type='filters' />
            <card size='268' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]'>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;Data File&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='other filetype'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='41' type='pages' />
            <card size='62' type='filters' />
            <card size='268' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='iops_mbs_by_filetype'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ratiobyFileType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='38' type='pages' />
            <card size='57' type='filters' />
            <card size='278' type='marks' />
            <card pane-specification-id='0' param='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' size='148' type='color' />
            <card pane-specification-id='0' param='[textscan.42395.067756909724].[sum:Calculation_261771773235003392:qk]' size='20' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[none:INSTNAME       :nk]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ratiobyRW'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='39' type='pages' />
            <card size='34' type='filters' />
            <card size='230' type='marks' />
            <card size='72' type='measures' />
            <card pane-specification-id='0' param='[textscan.42395.067756909724].[:Measure Names]' size='40' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[:Measure Names]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[none:INSTNAME       :nk]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='iops_mbs ALL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='39' type='pages' />
            <card size='85' type='filters' />
            <card size='269' type='marks' />
            <card pane-specification-id='1' param='[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]' size='173' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            <field>[textscan.42395.067756909724].[none:HOSTNAME                      :nk]</field>
            <field>[textscan.42395.067756909724].[none:INST:ok]</field>
            <field>[textscan.42395.067756909724].[none:INSTNAME       :nk]</field>
            <field>[textscan.42395.067756909724].[yr:TM                                                                         :ok]</field>
            <field>[textscan.42395.067756909724].[yr:TM               :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='datafile'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='other filetype'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42395.067756909724].[none:FILETYPE_NAME                 :nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='latency' width='192'>
      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
      PRXXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='rw_by_db_filetype' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rw all' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rw except datafile' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='datafile' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='other filetype' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='iops_mbs_by_filetype' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ratiobyFileType' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='ratiobyRW' width='192'>
      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
      laQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='iops_mbs ALL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      UPhRz4842HCQoBTkcujywrUnLz3J77X9XlaXpCvQxZtTb/KBDR/gax1f491N7+ajW5b+ms9z
      wndi4e9/v/TvtJa2LpocOO47zoHKAznd52pw4MCBZb1OAY71z/HY5is7zG6VF+2rwR4OHtye
      k8yqRIabjE9gL3NTXOFgThpHbPSyedNGlFKTgCVIUbUVV1ExKUmhbfN91Nd4sYp2qqq8xAIJ
      SsrKGfeN4TdV+qMXEa0iATFGWWnJol7fD3p+wNGJo6iGivm2z+rRiaOrcRtZKLqy8Lesy3zr
      4reyrhumwbe7vo2qX9Hjqxe+iqIrfPXCV/nF0C8ISSEC6QAd/g5eHXuVQDoAZDxnl+qzf/bI
      Z+kN9vLFs18EoDfYi6IrdAe6GY2NLsgDHJ08SlpL872u7zGZmCSQDnB44jDdge6sMr/f/f2F
      v0/PnL7Jp3JzvH757vMuXZUWIBKPkhKvzEm/Ovk6jzU+RlgJM2MUY6m2oCkWBK+IWemk2Gkl
      Go2i2TXm9BAP1VUxG5vFU2RjLh5ja/MuhifHqKouJhzI/OiKohALxdDiGljgWye+xYh/JDPY
      iqYIBAKL9FIUBUmSONp3lIP1BwnYFudZTuYr57/Cp/d8mmn/NFJU4mLyIr8SfsXD9Q8DmUHv
      sxeepUQt4V317yJtppmdm+ULR75AVI6ixTXi4YyXZ1yJ0znaiVN0sqdoD7+4+AvO+s7SF+1D
      S2uMTo+ixTXG4+MAuEQXgUCAz778WR5teJRN5ZvwOr1Mx6bxR/zIMRlNzswzqmRaku74lRf/
      jf43aClpQY2rGHYDXdLRFI1AIECgOPsZaJpGZeXdu/XxjYE53rGpauWMN8iqGMC5iXO80PdC
      VpotbeM/uv6DXdW7uOC/QENRAx/c8EE0NYG72k0gHeDlkZc54TtBuV7O0cmj1Hvq8af8bHNu
      43j/cY73H+dT939qocxIKIKe0EGARDhBOpomEAiQjCSXNIB5Xr30Ktud2wlYA/QGe2kra2M0
      Nsrm8s2L8s6mZnFancTDcSZmJnjy9JO0lLRQ6aykz9bH2eGzfHzrx/GH/WhxjUQ4QbwoztN9
      T6MndJKRJCklhZ7QFwzgO13fAUCzZvKrVpVELMHsXMZdYSiRPV7QrJmXNRgIkvQkiZpRJuQJ
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
